generator client {
  provider = "prisma-client-js"
}

generator pothos {
  provider = "prisma-pothos-types"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TeamColor {
  RED
  BLUE
}

model Player {
  id     Int    @id @default(autoincrement())
  name   String
  team   Team   @relation(fields: [teamId], references: [id])
  teamId Int
}

model Team {
  id                 Int       @id @default(autoincrement())
  teamColor          TeamColor
  Player             Player[]
  Game               Game      @relation(fields: [gameId], references: [id])
  gameId             String
  answearingPlayerId Int?
  score              Int
}

model Game {
  id             String           @id @unique
  status         GameStatus       @default(LOBBY)
  team           Team[]
  rounds         Int
  currentRound   Int
  currentScore   Int
  GamesQuestions GamesQuestions[]
}

enum GameStatus {
  LOBBY
  RUNNING
  FINISHED
}

model GamesQuestions {
  question   Question @relation(fields: [questionId], references: [id])
  questionId Int
  Game       Game     @relation(fields: [gameId], references: [id])
  gameId     String

  @@id([gameId, questionId])
}

enum Language {
  PL
  EN
}

model Question {
  id             Int              @id @default(autoincrement())
  text           String
  language       Language
  GamesQuestions GamesQuestions[]
  answer         Answer[]
}

model Answer {
  id         Int       @id @default(autoincrement())
  label      String
  points     Int
  variants   Variant[]
  Question   Question? @relation(fields: [questionId], references: [id])
  questionId Int?
}

model Variant {
  id       Int    @id @default(autoincrement())
  text     String
  answer   Answer @relation(fields: [answerId], references: [id])
  answerId Int    @unique
}
